/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: parsey_api.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct Cali_Nlp_ParseyRequest: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Cali_Nlp_ParseyRequest"}
  public var protoMessageName: String {return "ParseyRequest"}
  public var protoPackageName: String {return "cali.nlp"}
  public var jsonFieldNames: [String: Int] {return [
    "text": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "text": 1,
  ]}

  public var text: [String] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &text)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !text.isEmpty {
      try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: text, protoFieldNumber: 1, protoFieldName: "text", jsonFieldName: "text", swiftFieldName: "text")
    }
  }

  public func _protoc_generated_isEqualTo(other: Cali_Nlp_ParseyRequest) -> Bool {
    if text != other.text {return false}
    return true
  }
}

public struct Cali_Nlp_ParseyResponse: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Cali_Nlp_ParseyResponse"}
  public var protoMessageName: String {return "ParseyResponse"}
  public var protoPackageName: String {return "cali.nlp"}
  public var jsonFieldNames: [String: Int] {return [
    "result": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "result": 1,
  ]}

  public var result: [Syntaxnet_Sentence] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Syntaxnet_Sentence.self, value: &result)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !result.isEmpty {
      try visitor.visitRepeatedMessageField(value: result, protoFieldNumber: 1, protoFieldName: "result", jsonFieldName: "result", swiftFieldName: "result")
    }
  }

  public func _protoc_generated_isEqualTo(other: Cali_Nlp_ParseyResponse) -> Bool {
    if result != other.result {return false}
    return true
  }
}
